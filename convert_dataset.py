from openpyxl import load_workbook
from tqdm import tqdm
import json

input_file = "nlp_dataset.xlsx"
output_file = "for_labelstudio_streamed_fixed.jsonl"

# ‚ùó –£–∫–∞–∂–∏ –∑–¥–µ—Å—å, –∫–∞–∫–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –ù–ï –Ω—É–∂–Ω–æ —Ä–∞–∑–º–µ—á–∞—Ç—å (–Ω–æ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ hints)
excluded_columns = [
    "–¢–æ–≤–∞—Ä–ü–æ—Å—Ç–∞–≤–∫–∏", "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–¢–æ–≤–∞—Ä–∞", "–ú–ù–ù", "–ú–ù–ù–°—Ç—Ä–æ–∫–æ–π",
    "–ñ–ù", "–°–ú–ù–ù", "–ö–õ–ü", "–ù–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–π", "–û–ö–ü–î2",
    "–†–µ–≥–ù–æ–º–µ—Ä–ü—Ä–µ–¥–¶–µ–Ω—ã", "–î–∞—Ç–∞–û–∫–æ–Ω—á–∞–Ω–∏—è–ü—Ä–µ–¥–¶–µ–Ω—ã",
    "–í–∏–¥–ó–∞–ø–∏—Å–∏–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–µ—à–µ–Ω–∏—è–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
    "–î–∞—Ç–∞–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏–¶–µ–Ω—ã–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–î–∞—Ç–∞–í—Å—Ç—É–ø–ª–µ–Ω–∏—è–í–°–∏–ª—É–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
    "–î–æ–∑–∏—Ä–æ–≤–∫–∞–ì–†–õ–°", "–î–æ–∑–∏—Ä–æ–≤–∫–∞_–ï–ò_–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∞—è–û–ö–ï–ò", "–®—Ç—Ä–∏—Ö–∫–æ–¥", 
    "–í–ª–∞–¥–µ–ª–µ—Ü–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–í–ª–∞–¥–µ–ª–µ—Ü–°—Ç—Ä–∞–Ω–∞", "–õ–µ–∫—Ñ–æ—Ä–º–∞–î–æ–∑–∏—Ä–æ–≤–∫–∞–£–ø–∞–∫–æ–≤–∫–∞–ò–∑–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–í–ª–∞–¥–µ–ª–µ—Ü–†–£–ò–∑–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
    "–ù–æ–º–µ—Ä–†–µ—à–µ–Ω–∏—è–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–£", "–î–∞—Ç–∞–†–£"
]

def make_hint(row_dict):
    return "; ".join(
        f"{k}: {v}" for k, v in row_dict.items()
        if v and k not in excluded_columns
    )


def main():
    print("üì• –û—Ç–∫—Ä—ã—Ç–∏–µ Excel-—Ñ–∞–π–ª–∞...")
    wb = load_workbook(filename=input_file, read_only=True)
    ws = wb.active

    headers = [cell.value for cell in next(ws.iter_rows(min_row=1, max_row=1))]
    total_rows = ws.max_row - 1

    print(f"‚úÖ –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {total_rows}")
    print(f"‚ùó –ö–æ–ª–æ–Ω–∫–∏, –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–º–µ—Ç–∫–∏: {excluded_columns}")

    with open(output_file, "w", encoding="utf-8") as f:
        for row in tqdm(ws.iter_rows(min_row=2), total=total_rows, desc="–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫"):
            row_dict = {headers[i]: (str(cell.value).strip() if cell.value is not None else "") for i, cell in enumerate(row)}
            # data –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏
            data_item = {key: val for key, val in row_dict.items()}
            data_item["hints"] = make_hint(row_dict)
            json_line = {"data": data_item}
            f.write(json.dumps(json_line, ensure_ascii=False) + "\n")

    print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Label Studio: {output_file}")

if __name__ == "__main__":
    main()
