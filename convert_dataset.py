from openpyxl import load_workbook
import json
from tqdm import tqdm

def convert_excel_to_labelstudio(input_file, output_file):
    # –ö–æ–ª–æ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –º–µ—Ç–æ–∫
    EXCLUDED_COLUMNS = {
        "–¢–æ–≤–∞—Ä–ü–æ—Å—Ç–∞–≤–∫–∏", "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–¢–æ–≤–∞—Ä–∞", "–ú–ù–ù", "–ú–ù–ù–°—Ç—Ä–æ–∫–æ–π",
        "–ñ–ù", "–°–ú–ù–ù", "–ö–õ–ü", "–ù–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–π", "–û–ö–ü–î2",
        "–†–µ–≥–ù–æ–º–µ—Ä–ü—Ä–µ–¥–¶–µ–Ω—ã", "–î–∞—Ç–∞–û–∫–æ–Ω—á–∞–Ω–∏—è–ü—Ä–µ–¥–¶–µ–Ω—ã",
        "–í–∏–¥–ó–∞–ø–∏—Å–∏–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–µ—à–µ–Ω–∏—è–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
        "–î–∞—Ç–∞–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏–¶–µ–Ω—ã–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–î–∞—Ç–∞–í—Å—Ç—É–ø–ª–µ–Ω–∏—è–í–°–∏–ª—É–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
        "–î–æ–∑–∏—Ä–æ–≤–∫–∞_–ï–ò_–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∞—è–û–ö–ï–ò", "–®—Ç—Ä–∏—Ö–∫–æ–¥", 
        "–í–ª–∞–¥–µ–ª–µ—Ü–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–í–ª–∞–¥–µ–ª–µ—Ü–°—Ç—Ä–∞–Ω–∞", "–õ–µ–∫—Ñ–æ—Ä–º–∞–î–æ–∑–∏—Ä–æ–≤–∫–∞–£–ø–∞–∫–æ–≤–∫–∞–ò–∑–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", 
        "–í–ª–∞–¥–µ–ª–µ—Ü–†–£–ò–∑–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–µ—à–µ–Ω–∏—è–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–£", "–î–∞—Ç–∞–†–£"
    }

    print("‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ Excel —Ñ–∞–π–ª–∞ –≤ —Ä–µ–∂–∏–º–µ read_only...")
    try:
        wb = load_workbook(filename=input_file, read_only=True)
        ws = wb.active
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = [cell.value for cell in next(ws.iter_rows(min_row=1, max_row=1))]
        total_rows = ws.max_row - 1
        
        print(f"‚úÖ –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {total_rows}")
        print(f"‚ùó –ö–æ–ª–æ–Ω–∫–∏, –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–º–µ—Ç–∫–∏: {EXCLUDED_COLUMNS}")

        with open(output_file, "w", encoding="utf-8") as f_out:
            for row in tqdm(ws.iter_rows(min_row=2), total=total_rows, desc="–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫"):
                row_data = {header: cell.value for header, cell in zip(headers, row)}
                
                task_data = {
                    "data": {
                        "text": str(row_data.get("–¢–æ–≤–∞—Ä–ü–æ—Å—Ç–∞–≤–∫–∏", "")),
                        "reference": str(row_data.get("–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–¢–æ–≤–∞—Ä–∞", "")),
                        "correlated_data": {
                            col: str(row_data.get(col, "")) 
                            for col in EXCLUDED_COLUMNS 
                            if col in row_data
                        },
                        "labeling_data": {
                            col: str(row_data.get(col, "")) 
                            for col in headers 
                            if col not in EXCLUDED_COLUMNS
                        }
                    }
                }
                f_out.write(json.dumps(task_data, ensure_ascii=False) + "\n")
        
        print(f"üéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {output_file}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")
    finally:
        wb.close()

if __name__ == "__main__":
    convert_excel_to_labelstudio(
        input_file="nlp_dataset.xlsx",
        output_file="labelstudio_data.jsonl"
    )