from openpyxl import load_workbook
import json
from tqdm import tqdm

def convert_to_labelstudio_json(input_file, output_file, max_records=None):
    EXCLUDED_COLUMNS = {
        "–¢–æ–≤–∞—Ä–ü–æ—Å—Ç–∞–≤–∫–∏", "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–¢–æ–≤–∞—Ä–∞", "–ú–ù–ù", "–ú–ù–ù–°—Ç—Ä–æ–∫–æ–π",
        "–ñ–ù", "–°–ú–ù–ù", "–ö–õ–ü", "–ù–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–π", "–û–ö–ü–î2",
        "–†–µ–≥–ù–æ–º–µ—Ä–ü—Ä–µ–¥–¶–µ–Ω—ã", "–î–∞—Ç–∞–û–∫–æ–Ω—á–∞–Ω–∏—è–ü—Ä–µ–¥–¶–µ–Ω—ã",
        "–í–∏–¥–ó–∞–ø–∏—Å–∏–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–µ—à–µ–Ω–∏—è–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
        "–î–∞—Ç–∞–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏–¶–µ–Ω—ã–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–î–∞—Ç–∞–í—Å—Ç—É–ø–ª–µ–Ω–∏—è–í–°–∏–ª—É–†–µ–µ—Å—Ç—Ä–∞–ñ–ù",
        "–î–æ–∑–∏—Ä–æ–≤–∫–∞_–ï–ò_–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∞—è–û–ö–ï–ò", "–®—Ç—Ä–∏—Ö–∫–æ–¥", 
        "–í–ª–∞–¥–µ–ª–µ—Ü–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–í–ª–∞–¥–µ–ª–µ—Ü–°—Ç—Ä–∞–Ω–∞", "–õ–µ–∫—Ñ–æ—Ä–º–∞–î–æ–∑–∏—Ä–æ–≤–∫–∞–£–ø–∞–∫–æ–≤–∫–∞–ò–∑–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", 
        "–í–ª–∞–¥–µ–ª–µ—Ü–†–£–ò–∑–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–µ—à–µ–Ω–∏—è–†–µ–µ—Å—Ç—Ä–∞–ñ–ù", "–ù–æ–º–µ—Ä–†–£", "–î–∞—Ç–∞–†–£"
    }

    print("üîç –ß—Ç–µ–Ω–∏–µ Excel —Ñ–∞–π–ª–∞...")
    wb = load_workbook(filename=input_file, read_only=True)
    ws = wb.active
    
    headers = [cell.value for cell in next(ws.iter_rows(min_row=1, max_row=1))]
    total_rows = min(ws.max_row - 1, max_records) if max_records else ws.max_row - 1
    
    tasks = []
    
    for i, row in enumerate(tqdm(ws.iter_rows(min_row=2), total=total_rows, desc="–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è")):
        if max_records and i >= max_records:
            break
            
        row_data = {header: str(cell.value) if cell.value is not None else "" 
                   for header, cell in zip(headers, row)}
        
        tasks.append({
            "data": {
                "text": row_data.get("–¢–æ–≤–∞—Ä–ü–æ—Å—Ç–∞–≤–∫–∏", ""),
                "meta": {
                    "reference": row_data.get("–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–¢–æ–≤–∞—Ä–∞", ""),
                    **{k: v for k, v in row_data.items() 
                       if k not in EXCLUDED_COLUMNS}
                }
            }
        })
    
    with open(output_file, "w", encoding="utf-8") as f_out:
        json.dump({"tasks": tasks}, f_out, ensure_ascii=False, indent=2)
    
    wb.close()
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(tasks)} –∑–∞–ø–∏—Å–µ–π –≤ {output_file}")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
MAX_RECORDS = 100  # –ó–∞–¥–∞–π—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∏–ª–∏ None –¥–ª—è –≤—Å–µ—Ö
convert_to_labelstudio_json(
    input_file="nlp_dataset.xlsx",
    output_file="output.json",
    max_records=MAX_RECORDS
)