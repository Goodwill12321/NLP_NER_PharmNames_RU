#1-st version (not actual)
#annotation  (labeling) of names using openrouter deepseek
import csv
import json
import os
import time
import requests
from tqdm import tqdm
from tenacity import retry, stop_after_attempt, wait_random_exponential

# Настройки
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY") or "sk-..."  # замените на свой ключ
INPUT_FILE = "data/nlp_dataset_distinct_wo_col.csv"
OUTPUT_FILE = "dataset_annotated.csv"
MODEL_ANNOTATE = "deepseek/deepseek-chat-v3-0324:free"  # или "deepseek-moe:13b"

# meta-llama/llama-3.3-8b-instruct:free
# tngtech/deepseek-r1t-chimera:free
#
MODEL_VALIDATE = "deepseek/deepseek-r1:free"

HEADERS = {
    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
    "X-Title": "NER Annotator",
    "Content-Type": "application/json"
}

# Промпты

system_prompt = """Лекарственные препараты задаются стандартным способов в реестре лекарственных средств, 
а также могут быть заданы произвольно в коммерческих системах с сокращениями и без полного перечисления 
характеристик и составляющих, типа лек. формы, дозировки, единицы измерения , количеств в разных упаковках и пр. 
Представь, что ты эксперт провизор, фармацевт, знаешь общепринятые сокращения стандартных форм 
и как пересчитываются различные единицы измерения и дозировки. 
Нужно помочь в сопоставлении нестандартных наименований со стандартными попарно (стандартное, нестандартное). 
Желательно указывая в каких частях идет расхождение"""

prompt_annotate = """
У меня есть датасет в котором 1-я колонка ТоварПоставки имеет произвольную не строгую структуру наименования лек.средства. 
2-я колонка, ПредставлениеТовара - то же самое лек.средство из гос. реестра составленная по правильной структуре из составляющих. 
Часть составляющих представления товара хранится отдельно в других колонках : 
Торговое наименование, Дозировка, Лекформа, ВторичнаяУпаковкаКоличество и т.д.
В данном примере приведен датасет, в котором в формате csv в 1-й строки заголовки. 
Есть колонки, заканчивающиеся на _ТП - это части Товара поставки которые нужно выявить анализируя ПредставлениеТовара 
ему соответствующее в строке и части Представления твоара в остальных колонках, проводя аналогию распложения частей товара 
в ПредставленииТовара. В этих примерах я выявил эти части. :

ТоварПоставки,ПредставлениеТовара,ТорговоеНаименование,ТорговоеНаименование_ТП,Дозировка,Дозировка_ТП,ЛекФорма,Лекформа_ТП,ПервичнаяУпаковкаНазвание,ПервичнаяУпаковкаНазвание_ТП,ПервичнаяУпаковкаКоличество,ПервичнаяУпаковкаКоличество_ТП,ДозировкаКоличество,ДозировкаКоличество_ТП,ПотребительскаяУпаковкаКолво,ПотребительскаяУпаковкаКолво_ТП,ВторичнаяУпаковкаНазвание,ВторичнаяУпаковкаНазвание_ТП,ВторичнаяУпаковкаКоличество,ВторичнаяУпаковкаКоличество_ТП
9 месяцев Фолиевая кислота табл п/о плен 400 мкг х30,"9 месяцев Фолиевая кислота таблетки, покрытые пленочной оболочкой, 400 мкг, 10 шт. - упаковки ячейковые контурные (3)  - пачки картонные",9 месяцев Фолиевая кислота,9 месяцев Фолиевая кислота,400 мкг,400 мкг,"ТАБЛЕТКИ, ПОКРЫТЫЕ ОБОЛОЧКОЙ",,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,10,,0,,30,30,КАРТОННАЯ ПАЧКА,,3,
LIBELL/ЛИБЭЛЬ Спирали от комаров черн 602573,"L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,LIBELL/ЛИБЭЛЬ Спирали от комаров,1 мг/мл,,КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,,АМПУЛЫ,,5,,,0,,50,,КАРТОННАЯ ПАЧКА,,10
"L-Лизина эсцинат 0,001/мл 5 мл №10 амп*","L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,L-Лизина эсцинат,1 мг/мл,"0,001/мл",КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,,АМПУЛЫ,амп,5,5,,0,,50,,КАРТОННАЯ ПАЧКА,,10
"L-ЛИЗИНА ЭСЦИНАТ 0,001/МЛ 5МЛ N10 АМП КОНЦ Д/Р-РА В/В/ОЗОН","L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,L-ЛИЗИНА ЭСЦИНАТ,1 мг/мл,"0,001/МЛ",КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,КОНЦ Д/Р-РА В/В,АМПУЛЫ,АМП,5,5,,0,,50,,КАРТОННАЯ ПАЧКА,,10
L-Лизина эсцинат конц д/приг р-ра в/в введ 1 мг/мл амп 5 мл х10,"L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,L-Лизина эсцинат,1 мг/мл,1 мг/мл ,КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,конц д/приг р-ра в/в введ,АМПУЛЫ,амп,5,5,,0,,50,,КАРТОННАЯ ПАЧКА,,10
L-Лизина эсцинат конц д/приг р-ра в/в введ 1мг/мл 5мл амп №10,"L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,L-Лизина эсцинат,1 мг/мл,1 мг/мл ,КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,конц д/приг р-ра в/в введ,АМПУЛЫ,амп,5,5,0,,50,,КАРТОННАЯ ПАЧКА,,10,10
L-ЛИЗИНА ЭСЦИНАТ КОНЦ. Д/ПРИГ. Р-РА ДЛЯ В/В ВВЕД. 1МГ/МЛ АМП. 5МЛ №10,"L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,L-ЛИЗИНА ЭСЦИНАТ,1 мг/мл,1МГ/МЛ,КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,КОНЦ. Д/ПРИГ. Р-РА ДЛЯ В/В ВВЕД,АМПУЛЫ,АМП,5,5,,0,,50,,КАРТОННАЯ ПАЧКА,,10
L-Лизина-эсцинат (конц д/приг р-ра для в/в введен 1мг/мл 5 мл №10 амп. п/карт. ),"L-Лизина эсцинат КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ 1 мг/мл (5) АМПУЛЫ,  (10) КАРТОННАЯ ПАЧКА",L-Лизина эсцинат,L-Лизина-эсцинат,1 мг/мл,1мг/мл,КОНЦЕНТРАТ ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ВНУТРИВЕННОГО ВВЕДЕНИЯ,конц д/приг р-ра для в/в введен ,АМПУЛЫ,амп,5,5,0,,50,,КАРТОННАЯ ПАЧКА,,10,10
L-ТИРОКСИН 100МКГ N100 ТАБЛ,"L-Тироксин таблетки, 0.1 мг, 50 шт. - упаковки ячейковые контурные (2)  - пачки картонные",L-Тироксин,L-ТИРОКСИН,100 мкг,100МКГ,ТАБЛЕТКИ,ТАБЛ,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,50,,0,,100,100,КАРТОННАЯ ПАЧКА,,2,
L-ТИРОКСИН 150 БЕРЛИН-ХЕМИ N100 ТАБЛ,"L-Тироксин 150 Берлин-Хеми таблетки, 150 мкг, 25 шт. - контурная ячейковая упаковка (блистер) (4)  - пачка  картонная",L-Тироксин 150 Берлин-Хеми,L-ТИРОКСИН 150 БЕРЛИН-ХЕМИ,150 мкг,,ТАБЛЕТКИ,ТАБЛ,БЛИСТЕР,,25,,0,,100,100,КАРТОННАЯ ПАЧКА,,4,
L-ТИРОКСИН 50 БЕРЛИН-ХЕМИ N50 ТАБЛ,"L-Тироксин 50 Берлин-Хеми таблетки, 50 мкг, 25 шт. - блистер (2)  - пачка картонная",L-Тироксин 50 Берлин-Хеми,L-ТИРОКСИН 50 БЕРЛИН-ХЕМИ,50 мкг,,ТАБЛЕТКИ,ТАБЛ,БЛИСТЕР,,25,,0,,50,50,КАРТОННАЯ ПАЧКА,,2,
L-Тироксин 50 Берлин-Хеми таб 50 мкг №50,"L-Тироксин 50 Берлин-Хеми таблетки, 50 мкг, 25 шт. - блистер (2)  - пачка картонная",L-Тироксин 50 Берлин-Хеми,L-Тироксин 50 Берлин-Хеми,50 мкг,50 мкг,ТАБЛЕТКИ,таб,БЛИСТЕР,,25,,0,,50,50,КАРТОННАЯ ПАЧКА,,2,
L-Тироксин 50 Берлин-Хеми таб. 50мкг №50,"L-Тироксин 50 Берлин-Хеми таблетки, 50 мкг, 25 шт. - контурная ячейковая упаковка (блистер) (2)  - пачка картонная",L-Тироксин 50 Берлин-Хеми,L-Тироксин 50 Берлин-Хеми ,50 мкг,50мкг,ТАБЛЕТКИ,таб,БЛИСТЕР,,25,,0,,50,50,КАРТОННАЯ ПАЧКА,,2,
L-Тироксин 75 Берлин-Хеми (таб. 75 мкг №100 блист. пач/ карт ),"L-Тироксин 75 Берлин-Хеми таблетки, 75 мкг, 25 шт. - контурная ячейковая  упаковка (блистер) (4)  - пачка  картонная",L-Тироксин 75 Берлин-Хеми,L-Тироксин 75 Берлин-Хеми,75 мкг,75 мкг,ТАБЛЕТКИ,таб,БЛИСТЕР,блист,25,,0,,100,,КАРТОННАЯ ПАЧКА,пач,4,
"Авамис (спрей назал. дозиров. 27,5 мкг/доза 120доз фл/пач. карт. )","Авамис СПРЕЙ НАЗАЛЬНЫЙ ДОЗИРОВАННЫЙ 27.5 мкг/доза (120) ФЛАКОН,  (1) КАРТОННАЯ ПАЧКА",Авамис,Авамис,27.5 мкг/доза,"27,5 мкг/доза",СПРЕЙ НАЗАЛЬНЫЙ ДОЗИРОВАННЫЙ,спрей назал. дозиров.,ФЛАКОН,фл,120,,0,,120,120,КАРТОННАЯ ПАЧКА,пач.карт.,1,
"АГОМЕЛАТИН 0,025 N28 ТАБЛ П/ПЛЕН/ОБОЛОЧ","Агомелатин таблетки, покрытые пленочной оболочкой, 25 мг, 14 шт. - упаковки ячейковые контурные (2)  - пачки картонные",Агомелатин,АГОМЕЛАТИН,25 мг,25,"ТАБЛЕТКИ, ПОКРЫТЫЕ ОБОЛОЧКОЙ",ТАБЛ П/ПЛЕН/ОБОЛОЧ,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,14,,25,,28,28,КАРТОННАЯ ПАЧКА,,2,


выяви их также для следующих строк:
Адаптол (таб. 500 мг №20 яч.конт/п/карт. ),"Адаптол ТАБЛЕТКИ 500 мг (10) УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,  (2) КАРТОННАЯ ПАЧКА",Адаптол,,500 мг,,ТАБЛЕТКИ,,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,10,,0,,20,,КАРТОННАЯ ПАЧКА,,2,
Адаптол таб 500 мг №20,"Адаптол ТАБЛЕТКИ 500 мг (10) УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,  (2) КАРТОННАЯ ПАЧКА",Адаптол,,500 мг,,ТАБЛЕТКИ,,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,10,,0,,20,,КАРТОННАЯ ПАЧКА,,2,
"Адвантан мазь д/наруж прим жирная 0,1 % 15 г х1","Адвантан МАЗЬ ДЛЯ НАРУЖНОГО ПРИМЕНЕНИЯ 0.1 % (15) ТУБА,  (1) КАРТОННАЯ ПАЧКА",Адвантан,,0.1 %,,МАЗЬ ДЛЯ НАРУЖНОГО ПРИМЕНЕНИЯ,,ТУБА,,15,,0,,15,,КАРТОННАЯ ПАЧКА,,1,
"Адвантан эмульсия д/наруж прим 0,1 % туба 20 г х1 ^","Адвантан ЭМУЛЬСИЯ ДЛЯ НАРУЖНОГО ПРИМЕНЕНИЯ 0.1 % (20) ТУБА,  (1) КАРТОННАЯ ПАЧКА",Адвантан,,0.1 %,,ЭМУЛЬСИЯ ДЛЯ НАРУЖНОГО ПРИМЕНЕНИЯ,,ТУБА,,20,,0,,20,,КАРТОННАЯ ПАЧКА,,1,
Адеметионин таб. кишечнораст. п/плен. об.  400мг №20 и/у,"Адеметионин таблетки кишечнорастворимые, покрытые пленочной оболочкой, 400 мг, 10 шт. - контурная ячейковая упаковка (2)  - пачка картонная",Адеметионин,,400 мг,,"ТАБЛЕТКИ, ПОКРЫТЫЕ ОБОЛОЧКОЙ",,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,10,,400,,20,,КАРТОННАЯ ПАЧКА,,2,
Адеметионин табл кишечнораст п/о плен 400 мг х20,"Адеметионин таблетки кишечнорастворимые, покрытые пленочной оболочкой, 400 мг, 10 шт. - контурная ячейковая упаковка (2)  - пачка картонная",Адеметионин,,400 мг,,"ТАБЛЕТКИ, ПОКРЫТЫЕ ОБОЛОЧКОЙ",,УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ,,10,,400,,20,,КАРТОННАЯ ПАЧКА,,2,
Аджисепт (таб. д/рассас. ананасовые №24 стрипы пач.карт. ),"Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (4) КАРТОННАЯ ПАЧКА",Аджисепт,,0.6 мг+1.2 мг,,ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ,,СТРИПЫ,,6,,0,,24,,КАРТОННАЯ ПАЧКА,,4,
Аджисепт (таб. д/рассас. классические №24 стрипы пач.карт. ),"Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (4) КАРТОННАЯ ПАЧКА",Аджисепт,,0.6 мг+1.2 мг,,ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ,,СТРИПЫ,,6,,0,,24,,КАРТОННАЯ ПАЧКА,,4,
Аджисепт (таб.д/рассас. №24 классические) Agio Pharmaceuticals-Индия,"Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (4) КАРТОННАЯ ПАЧКА",Аджисепт,,0.6 мг+1.2 мг,,ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ,,СТРИПЫ,,6,,0,,24,,КАРТОННАЯ ПАЧКА,,4,
АДЖИСЕПТ АНАНАС N24 ТАБЛ Д/РАССАС,"Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (4) КАРТОННАЯ ПАЧКА",Аджисепт,,0.6 мг+1.2 мг,,ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ,,СТРИПЫ,,6,,0,,24,,КАРТОННАЯ ПАЧКА,,4,
Аджисепт д/детей таб. д/расс. №12 лимон,"Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (2) КАРТОННАЯ ПАЧКА",Аджисепт,,0.6 мг+1.2 мг,,ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ,,СТРИПЫ,,6,,0,,12,,КАРТОННАЯ ПАЧКА,,2,
Аджисепт классический №24*,"Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (4) КАРТОННАЯ ПАЧКА",Аджисепт,,0.6 мг+1.2 мг,,ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ,,СТРИПЫ,,6,,0,,24,,КАРТОННАЯ ПАЧКА,,4,
Нужно вернуть json с заполненными колонками из исходного csv файла, который я дал, но на первом уровне 
 выбирать нужно только заканчивающиеся на "_ТП". Заполнять нужноч частями ТовараПоставки.
например (здесь приведены неверные данные, просто для понимания структуры колонок json. В примере символом ... 
указано, что там могут быть какие-то данные, которые нужно делать по аналогии далее также. 
Те колонки которые не удастся найти в ТовареПоставки, оставлять пустыми) : "[
   {
       "ТоварПоставки": "Аджисепт (таб. д/рассас. ананасовые №24 стрипы пач.карт. )",
       "ПредставлениеТовара" : "Аджисепт ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ 0.6 мг+1.2 мг (6) СТРИПЫ,  (4) КАРТОННАЯ ПАЧКА",
       "ТорговоеНаименование_ТП": "Аджисепт",
       "Лекформа_ТП": "ТАБЛ",
       "ПервичнаяУпаковкаНазвание_ТП": "АМП",
       "ПервичнаяУпаковкаКоличество_ТП": 5,
       ИсходныеДанные: {
           "ТорговоеНаименование": "Аджисепт",
           "ЛекФорма": "ТАБЛЕТКИ ДЛЯ РАССАСЫВАНИЯ",
           "ПервичнаяУпаковкаНазвание": "АМПУЛЫ",
           "ПервичнаяУпаковкаКоличество": 5,
           "ВторичнаяУпаковкаНазвание": "КАРТОННАЯ ПАЧКА",
           "ВторичнаяУпаковкаКоличество": 10,
           "ПотребительскаяУпаковкаНазвание": "УПАКОВКА ЯЧЕЙКОВАЯ КОНТУРНАЯ",
           "ПотребительскаяУпаковкаКоличество": 5,
           "Дозировка": "0.6 мг+1.2 мг",
           ...
       },
   },
   ...
]"  ВАЖНО! - эти части (т.е. реквизиты json с постфиксом _ТП) могут быть только взяты из ТовараПоставки, нельзя брать их откуда-то еще, например из других колонок или додумывать!
 Например, нельзя делать так:
   "ТоварПоставки": "Адеметионин табл кишечнораст п/о плен 400 мг х20", 
    "ПредставлениеТовара": "Адеметионин таблетки кишечнорастворимые, покрытые пленочной оболочкой, 400 мг, 10 шт. - контурная ячейковая упаковка (2)  - пачка картонная", 
    "ЛекФорма_ТП": "ТАБЛЕТКИ, ПОКРЫТЫЕ ОБОЛОЧКОЙ",
здесь должно быть
"ЛекФорма_ТП": "табл кишечнораст п/о плен", так как в ТовареПоставке записано именно так! Это сторогое правило! Нельзя выбирать что-то из ПредставленияТовара или других колонок!
Нужно понять какая часть товара поставки может быть дозировкой, лекформой, потребит. упаковкой и т.д.
Оставшиеся колонки нужно добавить во вложенную структуру ИсходныеДанные в которой первый реквизит : ТорговоеНаименование, ЛекФорма и потом в том порядке как в файле) 
    - это опорные данные по которым модель должна пытаться понять как считать расчетные колонки с постфиксом _ТП) и по которым можно будет проверить корректность расчитанных колонок
Если встречаются в ТовареПоставки символ № или х с цифрой, то это обычно количество в потребительской упаковке (например №12 - это ПотребительскаяУпаковкаКоличество = 12). 
Количества в первичной упаковке обычно с единицами измерения ("мл" и т.д.) 
Количество в потребительской упаковке как правило считаются как произведение количества в первичной упаковке и количества в упаковке вторичной. 
Значит вторичную можно рассчитать как количество в потребительской упаковке / количество в первичной упаковке.

Возвращай только json файл без пояснений, чтобы я мог скопировать и сохранить его. Также не используй никаких символов, 
которые не поддерживаются json кодировокой типа степени 3 (для кубических см - лучше поставить для степени ^),
Еще раз. Это важно! в отвее не должно быть никаких пояснений, только json файл ЦЕЛИКОМ целостный, правильный и до конца, а не только примеры.
"""



def build_validation_prompt(row, annotation):
    return f"""
Проверь корректность следующей разметки. Сравни с эталонным ПредставлениемТовара и предложи исправления, если есть ошибки.

ПредставлениеТовара: {row['ПредставлениеТовара']}
ТоварПоставки: {row['ТоварПоставки']}
Разметка:
{json.dumps(annotation, ensure_ascii=False, indent=2)}

Верни откорректированную разметку в JSON-формате с теми же ключами.
"""

@retry(stop=stop_after_attempt(3), wait=wait_random_exponential(min=2, max=10))
def ask_openrouter(system_prompt, prompt, model):
    url = "https://openrouter.ai/api/v1/chat/completions"
    data = {
        "model": model,
        "messages": [{"role": "system", "content": system_prompt},
                     {"role": "user", "content": prompt}],
        "temperature": 0.2
    }

    response = requests.post(url, headers=HEADERS, json=data, timeout=60)
    response.raise_for_status()
    content = response.json()["choices"][0]["message"]["content"]
    return extract_json_from_text(content)

def extract_json_from_text(text):
    try:
        start = text.find('{')
        end = text.rfind('}') + 1
        json_part = text[start:end]
        return json.loads(json_part)
    except Exception as e:
        print("Ошибка извлечения JSON:", e)
        print("Исходный ответ:", text)
        return {"ТорговоеНаименование_ТП": "", "ЛекФорма_ТП": "", "Дозировка_ТП": "", "Упаковка_ТП": ""}

def read_dataset(path):
    with open(path, encoding="utf-8") as f:
        reader = csv.DictReader(f)
        return list(reader)

def save_dataset(path, rows, fieldnames):
    with open(path, "w", encoding="utf-8", newline="") as f:
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(rows)

def main():
    data = read_dataset(INPUT_FILE)
    enriched_data = []

    for row in tqdm(data, desc="Аннотация и проверка"):
        # Шаг 1: Аннотация
        annotation = ask_openrouter(system_prompt, prompt_annotate, MODEL_ANNOTATE)

        # Шаг 2: Проверка / исправление
        prompt_validate = build_validation_prompt(row, annotation)
        validated_annotation = ask_openrouter(prompt_validate, MODEL_VALIDATE)

        # Объединение с оригинальной строкой
        row.update(validated_annotation)
        enriched_data.append(row)
        time.sleep(1.5)  # для избежания rate limit

    all_fieldnames = list(enriched_data[0].keys())
    save_dataset(OUTPUT_FILE, enriched_data, all_fieldnames)
    print("✅ Разметка завершена. Сохранено в:", OUTPUT_FILE)

if __name__ == "__main__":
    main()
